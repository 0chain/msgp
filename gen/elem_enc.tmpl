{{define "ElemTempl"}}{{if eq (.Type) 1 }}{{/*Ptr*/}}{{template "PtrTempl" .Ptr}}{{else if eq (.Type) 2 }}{{/*Slice*/}}{{template "SliceTempl" .Slice}}{{else if eq (.Type) 3 }}{{/*Struct*/}}{{template "StructTempl" .Struct}}{{else if eq (.Type) 4 }}{{/*Base*/}}{{template "BaseTempl" .Base}}{{end}}{{end}}

{{define "PtrTempl"}}
	if {{.Varname}} == nil {
		nn, err = en.WriteNil()
		n += int64(nn)
		if err != nil {
			return
		}
	} else {
		{{template "ElemTempl" .Value}}
	}{{end}}

{{define "BaseTempl"}}
	nn, err = en.Write{{.BaseName}}({{.Varname}})
	n += int64(nn)
	if err != nil {
		return
	}{{end}}

{{define "SliceTempl"}}
	nn, err = en.WriteArrayHeader(uint32(len({{.Varname}})))
	n += int64(nn)
	if err != nil {
		return
	}
	for i := range {{.Varname}} {
		{{template "ElemTempl" .Els}}
	}{{end}}

{{define "StructTempl"}}
	nn, err = en.WriteMapHeader(uint32({{len .Fields}}))
	n += int64(nn)
	if err != nil {
		return
	}
	{{range .Fields}}
	nn, err = en.WriteString("{{.FieldTag}}")
	n += int64(nn)
	if err != nil {
		return
	}
	{{template "ElemTempl" .FieldElem}}{{end}}{{end}}